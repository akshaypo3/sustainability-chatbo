name: Build & Deploy to SAP AI Core

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout repo
    - name: Checkout repo
      uses: actions/checkout@v3

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest .

    # Push Docker image
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest

    # Install kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0'

    # Get SAP AI Core Access Token
    - name: Get AI Core Token
      id: get_token
      run: |
        response=$(curl -s -X POST "${{ secrets.AUTH_URL }}" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials&client_id=${{ secrets.CLIENT_ID }}&client_secret=${{ secrets.CLIENT_SECRET }}")
        token=$(echo $response | jq -r .access_token)
        echo "TOKEN=$token" >> $GITHUB_ENV

    # Configure kubeconfig for AI Core
    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        kubectl config set-cluster ai-core --server=${{ secrets.AI_API_URL }} --insecure-skip-tls-verify=true
        kubectl config set-credentials ai-core-user --token=$TOKEN
        kubectl config set-context ai-core-context --cluster=ai-core --user=ai-core-user
        kubectl config use-context ai-core-context

    # Deploy WorkflowTemplate to SAP AI Core
    - name: Deploy WorkflowTemplate
      run: |
        kubectl apply -f sap_ai_core_deployment.yaml
