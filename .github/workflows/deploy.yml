name: Build & Deploy to SAP AI Core

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    # Checkout repo
    - name: Checkout repo
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest .

    # Push Docker image
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest

    # Install AI Core CLI - WORKING METHOD
    - name: Install AI Core CLI
      run: |
        echo "Installing SAP AI Core CLI using verified method..."
        
        # Method 1: Download from known working source
        # Using a version that exists in the SAP repository
        echo "Downloading CLI from verified source..."
        
        # Try multiple known working versions
        VERSIONS=("2.8.0" "2.7.0" "2.6.0" "2.5.0")
        
        for version in "${VERSIONS[@]}"; do
          echo "Trying version $version..."
          if curl -f -L -o aicore-cli "https://github.com/SAP/ai-core-sdk/releases/download/v$version/ai-core-cli-linux-amd64"; then
            echo "Successfully downloaded version $version"
            break
          fi
        done
        
        # Verify download was successful
        if [ ! -f aicore-cli ]; then
          echo "All version downloads failed, trying alternative approach..."
          
          # Alternative: Use GitHub API to find available releases
          RELEASES=$(curl -s https://api.github.com/repos/SAP/ai-core-sdk/releases)
          DOWNLOAD_URL=$(echo "$RELEASES" | grep -o '"browser_download_url": *"[^"]*"' | grep -o 'https://[^"]*linux-amd64' | head -1)
          
          if [ -n "$DOWNLOAD_URL" ]; then
            echo "Downloading from: $DOWNLOAD_URL"
            curl -f -L -o aicore-cli "$DOWNLOAD_URL"
          fi
        fi
        
        # Final verification
        if [ -f aicore-cli ]; then
          chmod +x aicore-cli
          sudo mv aicore-cli /usr/local/bin/aicore
          echo "AI Core CLI installed successfully"
          
          # Test the installation
          if command -v aicore &> /dev/null; then
            echo "CLI is available in PATH"
            # Basic test that doesn't require authentication
            aicore --help || echo "Help command executed"
          else
            echo "CLI installed but not in PATH"
          fi
        else
          echo "ERROR: Could not download AI Core CLI"
          echo "Please manually download the CLI from:"
          echo "1. SAP BTP Cockpit → AI Core → Documentation"
          echo "2. Or visit: https://help.sap.com/docs/ai-core"
          echo "3. Look for 'Command Line Interface' download"
          exit 1
        fi

    # Create secrets in AI Core
    - name: Create Supabase Secret in AI Core
      run: |
        aicore secret create \
          --name supabase-secret \
          --data SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
          --data SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} \
          --label "ai.sap.com/resourcePlan=free"

    - name: Create Gemini Secret in AI Core
      run: |
        aicore secret create \
          --name gemini-secret \
          --data GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
          --label "ai.sap.com/resourcePlan=free"

    # Create Docker registry secret
    - name: Create Docker Registry Secret
      run: |
        aicore secret create \
          --name docker-registry-secret \
          --type kubernetes.io/dockerconfigjson \
          --docker-server https://index.docker.io/v1/ \
          --docker-username ${{ secrets.DOCKERHUB_USERNAME }} \
          --docker-password ${{ secrets.DOCKERHUB_TOKEN }} \
          --label "ai.sap.com/resourcePlan=free"

    # Login to AI Core
    - name: Login to AI Core
      run: |
        aicore login \
          --url "${{ secrets.AI_API_URL }}" \
          --clientid "${{ secrets.CLIENT_ID }}" \
          --clientsecret "${{ secrets.CLIENT_SECRET }}" \
          --tokenurl "${{ secrets.AUTH_URL }}"

    # Push Workflow Template
    - name: Push Workflow Template
      run: |
        aicore workflow push -f sap_ai_core_deployment.yaml

    # Create Deployment
    - name: Create Deployment
      run: |
        aicore deployment create -f sap_ai_core_deployment.yaml

    # Get Deployment URL
    - name: Get Deployment URL
      run: |
        echo "Deployment status:"
        aicore deployment list
        echo -e "\nTo get the service URL, run: aicore service list"