name: Build & Validate SAP AI Core

on:
  push:
    branches:
      - main

jobs:
  build-and-validate:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2) Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3) Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest .

      # 4) Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest
          
      - name: Add aicore to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH


      # 5) Install jq (for parsing JSON) and SAP AI Core SDK (correct package)
      - name: Install SAP AI Core CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -L "https://github.com/SAP/ai-core-cli/releases/latest/download/aicore-linux-amd64" -o aicore
          chmod +x aicore
          sudo mv aicore /usr/local/bin/
          aicore version

      # 6) Get OAuth token from SAP BTP (XSUAA)
      - name: Get AI Core OAuth Token
        id: get_token
        env:
          AUTH_URL: ${{ secrets.AUTH_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          response=$(curl -s -X POST "$AUTH_URL" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET")
          echo "$response" | jq .
          token=$(echo "$response" | jq -r '.access_token')
          if [ -z "$token" ] || [ "$token" = "null" ]; then
            echo "Failed to get access_token from AUTH_URL"; exit 1;
          fi
          echo "AICORE_TOKEN=$token" >> $GITHUB_ENV

      # 7) Sanity check: call AI Core API
      - name: Validate AI Core API connectivity
        env:
          AI_API_URL: ${{ secrets.AI_API_URL }}
          AICORE_TOKEN: ${{ env.AICORE_TOKEN }}
        run: |
          echo "Listing resource groups to validate connectivity..."
          curl -s -H "Authorization: Bearer $AICORE_TOKEN" \
               "$AI_API_URL/v2/resourceGroups" | jq .
          echo "Success. Your creds and API URL are valid."

      # 8) Apply Configuration (sap_ai_core_configuration.yaml)
      - name: Apply AI Core Configuration
        run: |
          echo "Applying AI Core Configuration..."
          aicore apply -f deploy/sap_ai_core_configuration.yaml

      # 9) Apply Deployment (sap_ai_core_deployment.yaml)
      - name: Apply AI Core Deployment
        run: |
          echo "Applying AI Core Deployment..."
          aicore apply -f deploy/sap_ai_core_deployment.yaml

      # 10) Output the image URL for reference (you'll need this in Launchpad)
      - name: Print image URL for Launchpad
        run: |
          echo "Container image to use in Serving Template:"
          echo "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/sustainability-chatbo:latest"
