apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: sustainability-chatbot-serving
  annotations:
    scenarios.ai.sap.com/name: "sustainability-chatbot-scenario"
    scenarios.ai.sap.com/description: "Sustainability Chatbot scenario using Gemini AI"
    executables.ai.sap.com/name: "sustainability-chatbot-executable"
    executables.ai.sap.com/description: "Deploys Sustainability Chatbot container with Gemini AI integration"
  labels:
    ai.sap.com/version: "1.0.0"
    scenarios.ai.sap.com/id: "sustainability-chatbot-scenario"
spec:
  inputs:
    parameters:
      - name: image
        type: string
        default: "docker.io/akshay1p1/sustainability-chatbo:latest"
        description: "Docker image for sustainability chatbot"
      - name: containerPort
        type: integer
        default: 8080  # Changed from 5000 to 8080 to match Dockerfile
        description: "Port the container listens on"
    artifacts: []
  template:
    apiVersion: "serving.kserve.io/v1beta1"
    metadata:
      annotations:
        autoscaling.knative.dev/metric: rps
        autoscaling.knative.dev/target: "100"
        autoscaling.knative.dev/targetBurstCapacity: "70"
      labels:
        ai.sap.com/resourcePlan: "free"
    spec:
      predictor:
        minReplicas: 1
        maxReplicas: 2
        imagePullSecrets:
          - name: dockerhub-secret
        containers:
          - name: kserve-container
            image: "{{inputs.parameters.image}}"
            ports:
              - containerPort: {{inputs.parameters.containerPort}}
                protocol: TCP
            env:
              - name: SUPABASE_URL
                valueFrom:
                  secretKeyRef:
                    name: supabase-secret
                    key: SUPABASE_URL
              - name: SUPABASE_KEY
                valueFrom:
                  secretKeyRef:
                    name: supabase-secret
                    key: SUPABASE_KEY
              - name: GEMINI_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: gemini-secret
                    key: GEMINI_API_KEY
            resources:
              requests:
                memory: "2Gi"
                cpu: "1"
              limits:
                memory: "4Gi"
                cpu: "2"
            livenessProbe:
              httpGet:
                path: /health
                port: {{inputs.parameters.containerPort}}
              initialDelaySeconds: 30
              periodSeconds: 10
            readinessProbe:
              httpGet:
                path: /health
                port: {{inputs.parameters.containerPort}}
              initialDelaySeconds: 5
              periodSeconds: 5