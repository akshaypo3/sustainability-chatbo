apiVersion: ai.sap.com/v1alpha1
kind: ServingTemplate
metadata:
  name: sustainability-chatbot-serving
  labels:
    ai.sap.com/version: "0.1.0"
    scenarios.ai.sap.com/id: "chatbot-scenario"
  annotations:
    scenarios.ai.sap.com/name: "chatbot-scenario"
    scenarios.ai.sap.com/description: "Sustainability Chatbot scenario"
    executables.ai.sap.com/name: "sustainability-chatbot-exec"
    executables.ai.sap.com/description: "Deploys Sustainability Chatbot container"

spec:
  inputs:
    parameters: []     # no params needed
    artifacts: []
  template: |
    apiVersion: serving.kserve.io/v1beta1
    kind: InferenceService
    metadata:
      labels:
        ai.sap.com/resourcePlan: "starter"
      annotations:
        autoscaling.knative.dev/metric: "rps"
        autoscaling.knative.dev/target: "100"
        autoscaling.knative.dev/targetBurstCapacity: "70"
    spec:
      predictor:
        minReplicas: 1
        maxReplicas: 2
        imagePullSecrets:
          - name: dockerhub-secret
        containers:
          - name: kserve-container
            image: "docker.io/akshay1p1/sustainability-chatbo:latest"
            ports:
              - containerPort: 8080
                protocol: TCP
            env:
              - name: PORT
                value: "8080"
              - name: SUPABASE_URL
                valueFrom:
                  secretKeyRef:
                    name: supabase-secret
                    key: SUPABASE_URL
              - name: SUPABASE_KEY
                valueFrom:
                  secretKeyRef:
                    name: supabase-secret
                    key: SUPABASE_KEY
              - name: GEMINI_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: gemini-secret
                    key: GEMINI_API_KEY
            readinessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 10
              periodSeconds: 20
